#! /usr/bin/perl

# Use `strict' pragma to complain about more things wrong
use strict;

# use `warnings' pragma to complain about even more things wrong
use warnings;

# Declare `subroutine'
#sub echo 
#{
	# `@_' is a built-in variable that refers to the array of values the 
	# subroutine got as paramaters
#	print "@_\n";
#}

# Create a new _local variable_ using `my'
sub echo
{
	# If using local variables from command line arguments,
	# you must set local variable with @_ or program will not run
	# as expected. It will simply not transfer the command line args over
	my @params = @_;
	


# Define scalar variable

	
	# Multidimensional arrays
	my @word = @params[2, 1, 0]; 

	print "Print value of \$word, which is \$params[2, 1, 0] :: @word\n";

	print "Print value of \$params[1] :: $params[1]\n";

# Cause strict to complain by making global variable in a subroutine
#	@params = @_;
#	print "@params\n";

	# Access elements of an array using brackets
#	print "$params[0] $params[2]\n";

}

echo @ARGV;

# Define a variable
#my @ARG = "Foo"; 

#print "@ARGV\n";



